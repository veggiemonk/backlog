# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj
version: 2

project_name: backlog

before:
  hooks:
    - go mod tidy
    - go generate ./...

builds:
  - env:
      - CGO_ENABLED=0
    goos:
      - linux
      - darwin
    goarch:
      - amd64
      - arm64
    mod_timestamp: "{{ .CommitTimestamp }}"
    flags:
      # trims path
      - -trimpath
    ldflags:
      - -s -w

# https://github.com/goreleaser/example-supply-chain
checksum:
  name_template: "checksums.txt"

report_sizes: true

sboms:
  - artifacts: archive
  - id: source # Two different sbom configurations need two different IDs
    artifacts: source

dockers_v2:
  - images:
      - "ghcr.io/goreleaser/example-supply-chain"
    tags:
      - latest
      - "{{ .Tag }}"
    dockerfile: Dockerfile
    labels:
      org.opencontainers.image.created: "{{.Date}}"
      org.opencontainers.image.name: "{{.ProjectName}}"
      org.opencontainers.image.revision: "{{.FullCommit}}"
      org.opencontainers.image.version: "{{.Version}}"
      org.opencontainers.image.source: "{{.GitURL}}"
      org.opencontainers.image.description: |
        Backlog is a zero-configuration task manager written in Go where tasks live inside a Git repository. It leverages plain Markdown files for task storage and a comprehensive command-line interface (CLI) for interaction. This design makes it exceptionally well-suited for AI agents thanks to its MCP (Model Context Protocol) integration.
    annotations:
      "index:org.opencontainers.image.description": |
        Backlog is a zero-configuration task manager written in Go where tasks live inside a Git repository. It leverages plain Markdown files for task storage and a comprehensive command-line interface (CLI) for interaction. This design makes it exceptionally well-suited for AI agents thanks to its MCP (Model Context Protocol) integration.

changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"

release:
  footer: >-

    ---

    Released by [GoReleaser](https://github.com/goreleaser/goreleaser).
